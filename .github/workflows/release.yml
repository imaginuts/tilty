name: Release
on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8' ]
    steps:
    - uses: actions/checkout@v1
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: install pre-reqs
      run: sudo apt-get update && sudo apt-get install libbluetooth-dev && pip install -r requirements.txt && pip install -r requirements-dev.txt
    - name: isort
      run: isort -c -rc tilty -sp .
    - name: pylint
      run: pylint --rcfile .pylintrc -r n tilty
    - name: set pythonpath
      run: echo "::set-env name=PYTHONPATH::$(pwd)"
    - name: pytest
      run: py.test --cov-config .coveragerc --cov tilty --cov-report term-missing --cov-report xml --junitxml junit.xml tests
  upload_to_pypi:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Copy Repo Files
      uses: actions/checkout@master
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
        architecture: x64
    - name: pre-reqs
      run: pip install twine wheel
    - name: Build
      run: python setup.py sdist bdist_wheel
    - name: upload
      run: python -m twine upload dist/* --verbose
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD : ${{ secrets.TWINE_PASSWORD }}
  ubuntu_tag_deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Copy Repo Files
      uses: actions/checkout@master
    - name: get version
      run: echo "::set-env name=TAG::$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\///g")"
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Login
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
    - name: Build
      run: docker buildx build -t myoung34/tilty:${TAG} --output "type=image,push=true" --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 .
